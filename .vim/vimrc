set nu
nnoremap <c-n> :tabn<cr>
nnoremap <c-p> :tabp<cr>
"nnoremap t :tabnew<CR>
"nnoremap tn :tabnew<CR>
"nnoremap tj :tabnext<CR>
"nnoremap tk :tabprev<CR>
"nnoremap tc :tabclose<CR>

"ctags
set tags=./.tags;,.tags

nnoremap <space> :
"set cuc cul


set nocompatible "不要vim模仿vi模式，建议设置，否则会有很多不兼容的问题
syntax on"打开高亮
set tabstop=4 "让一个tab等于4个空格
set softtabstop=4
set shiftwidth=4
set autoindent
set backspace=start,indent,eol
set foldmethod=marker
set showcmd
set autoindent
set t_Co=256
syntax on
set relativenumber
filetype indent on
set expandtab

imap <c-a> <esc>ggyGy
let mapleader = ";"
nmap <leader>w :w<CR>:q<CR>
nmap <leader>q :q<CR>
"打开一个分屏vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<CR>
"重新读取vimrc
nnoremap <leader>sv :source $MYVIMRC<CR>

map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>

inoremap <esc> <nop>
inoremap kj <ESC>

map <F4> : call CopyToWindows()<CR> " 复制到windows的剪切板
map! <F4> <ESC> : call CopyToWindows()<CR>
func! CopyToWindows()
    exec"w"
    exec "!cat % |/mnt/c/Windows/System32/clip.exe"
endfunc

"let localleader = ","
"autocmd FileType go nnoremap <buffer> <localleader>c I#<esc>



"imap <space><space> <C-x><C-o>
"open new file in newtab
"let NERDTreeMapOpenInTab='\r'

call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'Chiel92/vim-autoformat'
Plug 'ludovicchabant/vim-gutentags'
"Plug 'fatih/vim-go'
"Plug 'scrooloose/syntastic'
Plug 'skywind3000/vim-auto-popmenu'
Plug 'skywind3000/vim-dict'

" Shorthand notation for plugin
"Plug 'foo/bar'
call plug#end()

"auto  ycm
let g:apc_enable_ft = {'*':1}
set cpt=.,k,w,b
set completeopt=menu,menuone,noselect
set shortmess+=c

nmap <F10> :set paste<cr>
nmap <F11> :set nopaste<cr>
set pastetoggle=<F11>

"gutentags
" gutentags 搜索工程目录的标志，碰到这些文件/目录名就停止向上一级目录递归
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']

" 所生成的数据文件的名称
let g:gutentags_ctags_tagfile = '.tags'

" 将自动生成的 tags 文件全部放入 ~/.cache/tags 目录中，避免污染工程目录
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags

" 配置 ctags 的参数
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']

" 检测 ~/.cache/tags 不存在就新建
if !isdirectory(s:vim_tags)
   silent! call mkdir(s:vim_tags, 'p')
endif


"
"*****************   vim-autoformat   **********************
let g:autoformat_verbosemode=0 "详细模式
let g:autoformat_autoindent = 0
let g:autoformat_retab = 1
let g:autoformat_remove_trailing_spaces = 1
let g:formatdef_hl_js='"js-beautify"'
let g:formatdef_hl_c='"clang-format -style=\"{BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, PointerAlignment: Right, ColumnLimit: 150, SpacesBeforeTrailingComments: 1}\""' "指定格式化的方式, 使用配置参数
let g:formatters_c = ['hl_c']
let g:formatters_cpp = ['hl_c']
let g:formatters_json = ['hl_js']
let g:formatters_js = ['hl_js']
let g:formatdef_sqlformat = '"sqlformat --keywords upper -"'
let g:formatters_sql = ['sqlformat']

"保存时自动格式化指定文件类型代码
""au BufWrite * :Autoformat
"autocmd BufWrite *.sql,*.c,*.py,*.java,*.js :Autoformat
""设置发生保存事件时执行格式化
